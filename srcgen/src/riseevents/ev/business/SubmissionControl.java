//#if ${SubmissionParcial} == "T" or ${SubmissionCompleta} == "T"
package riseevents.ev.business;

import java.io.File;
import java.util.List;

import riseevents.ev.data.Submission;
import riseevents.ev.exception.RepositoryException;
import riseevents.ev.exception.SubmissionAlreadyInsertedException;
import riseevents.ev.exception.SubmissionNotFoundException;
import riseevents.ev.repository.SubmissionRepository;


public class SubmissionControl {
	
    private SubmissionRepository submissionList;
	
	public SubmissionControl(SubmissionRepository repository){
		this.submissionList = repository;
	}
	public void insert(Submission submission) throws SubmissionAlreadyInsertedException, RepositoryException{
		if (submission != null) {
			if (!submissionList.isThere(submission.getIdSubmission())) 
				submissionList.insert(submission);
			else
				throw new SubmissionAlreadyInsertedException(submission.getIdSubmission());
		} else {
            throw new IllegalArgumentException();
        }
	}
	
	public void remove(int idSubmission) throws SubmissionAlreadyInsertedException, RepositoryException, SubmissionNotFoundException{
		submissionList.remove(idSubmission);
	}
	
	public void update(Submission submission) throws SubmissionAlreadyInsertedException, RepositoryException, SubmissionNotFoundException{
		submissionList.update(submission);
	}
	
	public List<Submission> getSubmissionList() throws RepositoryException {
		return submissionList.getSubmissionList();  
	}
	
	public int getSubmissionLastId() throws RepositoryException{
		return submissionList.getSubmissionLastId();
	}

	public int getSubmissionIdByTitle(String submissionTitle) throws RepositoryException{
		return submissionList.getSubmissionIdByTitle(submissionTitle);
	}

	public Submission search(int idSubmission) throws SubmissionAlreadyInsertedException, RepositoryException, SubmissionNotFoundException{
		return submissionList.search(idSubmission);
	}

	// Generated by DSL
	public void inserAttachmanet(File attachment, int idActivity) throws SubmissionAlreadyInsertedException, RepositoryException{
		submissionList.insert(attachment, idActivity);
	}
	//
	public void pdfRecover(int idSubmission) throws RepositoryException {
		submissionList.pdfRecover(idSubmission);
	}
	
	public List<Submission> getSubmissionsByUser(int idUser) throws RepositoryException{
		return submissionList.getSubmissionsByUser(idUser);
	}
}
//#endif